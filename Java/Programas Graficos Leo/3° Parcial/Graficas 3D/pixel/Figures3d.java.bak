package pixel;

import java.awt.*;
//import java.awt.image.BufferedImage;
import javax.swing.*;

import java.lang.Math;
//import pixel.*;
import java.util.ArrayList;
import java.util.Hashtable;

/**
 * Figures3d
 */
public class Figures3d extends Figures2d{
    //public Hashtable<String,Integer> proyeccion; //Proyeccion x,y,z
    public int U; //Pixeles por unidad

    public Figures3d (int w, int h){
        super(w,h);
        //proyeccion=new Hashtable<String, Integer>();//Nuevo Diccionario
        if (w<h)
            U=w/50; //Pixeles por unidad
        else
            U=h/50; //Pixeles por unidad

        //proyeccion.put("x",50);
        //proyeccion.put("y",20);
        //proyeccion.put("z",10);
    }
    public void proyeccion_paralela() {
        drawCirc(100 , 100, 3*U, Color.WHITE);
        drawRect(100, 100, 10*U, 10*U, Color.pink);
        //drawRect(100,100, 200, 200, Color.BLUE);
    }

    public void Cubo3D(int x_centro,int y_centro,int z_centro,int tamaño,Hashtable<String,Integer> proyeccion, Color c) {
                //proyeccion_paralela
        int x,y;

        tamaño=tamaño*U;
        x=x_centro - proyeccion.get("x")*(z_centro/proyeccion.get("z"));
        y=y_centro - proyeccion.get("y")*(z_centro/proyeccion.get("z"));

        dibujarPxl(x,y,Color.green);
        
        dibujarPxl(x_centro,y_centro,Color.yellow);

        //x=x_centro-(z_centro*(proyeccion.get("x")-x_centro)/(proyeccion.get("z")-z_centro));
        //y=y_centro-(z_centro*(proyeccion.get("y")-y_centro)/(proyeccion.get("z")-z_centro));

        drawRect(x-tamaño, y-tamaño, x+tamaño, y+tamaño, Color.WHITE);
        drawRect(x_centro-tamaño, y_centro-tamaño, x_centro+tamaño, y_centro+tamaño, Color.WHITE);

        drawLine(x-tamaño, y-tamaño, x_centro-tamaño, y_centro-tamaño, Color.WHITE);
        drawLine(x+tamaño, y+tamaño, x_centro+tamaño, y_centro+tamaño, Color.WHITE);
        
        drawLine(x+tamaño, y-tamaño, x_centro+tamaño, y_centro-tamaño, Color.WHITE);
        drawLine(x-tamaño, y+tamaño, x_centro-tamaño, y_centro+tamaño, Color.WHITE);
    }

    public void drawLine3d(int x1,int y1,int z1,int x2,int y2,int z2,Hashtable<String,Integer> proyeccion,Color c) {
        
        x=x_centro - proyeccion.get("x")*(z_centro/proyeccion.get("z"));
        y=y_centro - proyeccion.get("y")*(z_centro/proyeccion.get("z"));
        
        drawLine(x1, y1, x2, y2, c);
        System.out.println(-z1/(float)z2);
    }
    /**
     * 
     * 
     public void drawEjes3D(Hashtable<String,Integer> proyeccion) {
         
         drawLine3d(0, 0, 0, 10, 0, 0,Color.GREEN,proyeccion);
         
        }
        */

    /*
    public void drawCuadrado(int x, int y, int tam, Color c) {
        //Usar posicion x,y como centro 
        //Calcular xi y yi
        //Calcular xf y yf
        //Dibujar un rectangulo con los calculos del rectangulo
        int xi,yi,xf,yf;

        int distancia_del_centro = tam*U;

        drawRect(x-distancia_del_centro, int y0, int x1, int y1, Color c);

        public void drawRect(int x0, int y0, int x1, int y1, Color c) {
            drawLine(x0, y0, x0, y1, c);
            drawLine(x0, y0, x1, y0, c);
    
            drawLine(x1, y0, x1, y1, c);
            drawLine(x0, y1, x1, y1, c);
         }
    }*/
}